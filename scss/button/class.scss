@use '../color/function' as *;

@mixin button-status($type) {
  &:hover {
    color: color($type + '-hover');
  }
  &:active {
    color: color($type + '-pressed');
  }
}
button {
  color: color('default-reverse');
  background-color: color('default');
  border: 1px solid color('default');
  outline: none;
  &:hover {
    background-color: color('default-hover');
  }
  &:active {
    background-color: color('default-pressed');
  }

  &.default-fill {
    color: color('default-reverse');
    background-color: color('default-fill');
    border: 1px solid color('default');
    @include button-status('default');
  }
  &.default-border,
  &.default-text {
    color: color('default');
    @include button-status('default');
  }
  &.default-fill,
  &.default-border {
    outline: none;
    &:hover {
      border: 1px solid color('default-hover');
    }
    &:active {
      border: 1px solid color('default-pressed');
    }
    &:focus {
      border: 1px solid color('default-focus');
    }
  }
  &.default-border {
    color: color('default-reverse');
    background-color: transparent;
    outline: none;
    border: 1px solid color('border');
    &:hover {
      color: color('default-reverse');
      border: 1px solid color('border-hover');
    }
    &:active {
      color: color('default-reverse');
      border: 1px solid color('border-pressed');
    }
    &:focus {
      border: 1px solid color('border-focus');
    }
  }
  &.default-fill {
    color: color('default-reverse');
    outline: none;
    &:hover {
      color: color('default-reverse');
      border: 1px solid color('border-hover');
    }
    &:active {
      color: color('default-reverse');
      border: 1px solid color('border-pressed');
    }
    &:focus {
      border: 1px solid color('border-focus');
    }
  }
  &.default-text {
    color: color('text-action');
    background-color: transparent;
    outline: none;
    border: none;
    &:hover {
      color: color('text-action-hover');
    }
    &:active {
      color: color('text-action-pressed');
    }
    &:focus {
      color: color('text-action-focus');
    }
  }

  &:disabled {
    color: color('text-action-disabled');
    background-color: color('bg-disabled');
    border: 1px solid color('bg-disabled');
    outline-color: color('bg-disabled');
    cursor: not-allowed;
  }
  &[class$='-border']:disabled {
    color: color('text-action-disabled');
    border: 1px solid color('border-disabled');
    outline-color: color('bg-disabled');
    cursor: not-allowed;
  }
  &[class$='-fill']:disabled {
    color: color('text-action-disabled');
    background-color: color('bg-disabled');
    border: 1px solid color('border-disabled');
    outline-color: color('bg-disabled');
    cursor: not-allowed;
  }

  &[class$='-text']:disabled {
    color: color('text-action-disabled');
    border: none;
    outline-color: none;
    cursor: not-allowed;
  }
}
@each $type in (primary, default-deep, info, link, success, warning, danger) {
  button:not(:disabled).#{$type} {
    color: color($type + '-reverse');
    background-color: color($type);
    border: 1px solid color($type);
    outline: none;
    &:hover {
      background-color: color($type + '-hover');
    }
    &:active {
      background-color: color($type + '-pressed');
    }
    &-text {
      border: none;
    }
    &-fill {
      color: color($type);
      background-color: color($type + '-fill');
      border: 1px solid color($type);
      @include button-status($type);
    }
    &-border,
    &-text {
      color: color($type);
      background-color: transparent;
      @include button-status($type);
    }
    &-fill,
    &-border {
      outline: none;
      &:hover {
        border: 1px solid color($type + '-hover');
      }
      &:active {
        border: 1px solid color($type + '-pressed');
      }
      &:focus {
        border: 1px solid color($type + '-focus');
      }
    }
  }
}
